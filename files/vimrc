" be iMproved
set nocompatible

" set the character encoding
set encoding=utf-8

" required by Vundle
filetype off

" load Vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Plugin 'gmarik/vundle'

" Airline
Plugin 'bling/vim-airline'
" Solarized color scheme
Plugin 'altercation/vim-colors-solarized'
" Molokai color scheme
Plugin 'tomasr/molokai'
" git wrapper
Plugin 'tpope/vim-fugitive'
" gitk/gitg for vim
Plugin 'gregsexton/gitv'
" fast file access in vim
Plugin 'kien/ctrlp.vim'
" filesystem explorer
Plugin 'scrooloose/nerdtree'
" code search with ack
Plugin 'mileszs/ack.vim'
" easily add/change/delete surroundings
Plugin 'tpope/vim-surround'
" syntax checking
Plugin 'scrooloose/syntastic'
" Google Go support
Plugin 'fatih/vim-go'
" Auto close delimiters
Plugin 'cohama/lexima.vim'

" enable loading plugin files for file type
" also required by vundle
filetype plugin indent on

" set 4 space tabs
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4

" language specific indentation
if has('autocmd')
    " html 2 space tabs
    autocmd FileType html* setlocal shiftwidth=2 tabstop=2 softtabstop=2
    " javascript 2 space tabs
    autocmd FileType javascript setlocal shiftwidth=2 tabstop=2 softtabstop=2
    " Google Go uses tabs characters and don't need to show invisibles
    autocmd FileType go,godoc setlocal noexpandtab nolist
    " Makefile don't need to show invisibles
    autocmd FileType make setlocal nolist
    " yaml 2 space tabs
    autocmd FileType yaml* setlocal shiftwidth=2 tabstop=2 softtabstop=2
endif

" set indent
set autoindent

" keep some space above and below the cursor
set scrolloff=10

" enable the use of mouse
set mouse=a

if has('persistent_undo')
    " enable persistent undos
    set undodir=~/.vimundo
    set undofile
endif

if exists('+relativenumber')
    " show relative line number
    set relativenumber
else
    " show line number
    set number
endif

if exists('+colorcolumn')
    " show colored 80th and 100th column
    set colorcolumn=80,100
endif

" show invisibles
set list
set listchars=tab:▸\ ,trail:\ 

" Airline
set laststatus=2 " always show the status line
set noshowmode " do not show mode message on last line
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.branch='⎇  '
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_theme='molokai'

" CtrlP
let g:ctrlp_map='<Leader>t'

" vim-go
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_fmt_fail_silently = 1

" syntastic
let g:syntastic_python_checkers = ['flake8']

" ack.vim
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" enable autocomplete menu
set wildmenu

" highlight searches
set hlsearch

" ignore case smartly for searchs
set ignorecase
set smartcase

" set terminal colors to 256
set t_Co=256

" set font in vim gui
if has('gui_running')
  set guifont=Inconsolata\ Medium\ 12
endif

" enable syntax highlighting
syntax enable

" color scheme
try
    " For solarized
    "set background=dark
    "let g:solarized_termcolors=256
    "colorscheme solarized
    let g:molokai_original = 1
    let g:rehash256 = 1
    colorscheme molokai
catch
    colorscheme desert
endtry

" more natural splitting
set splitbelow
set splitright

" 100ms key code delay
set ttimeoutlen=100

" up and down movements by screen line
nnoremap k gk
nnoremap j gj

" shortcut for typing :noh
nnoremap <Leader><space> :nohlsearch<CR>

" shortcut for NERDTree
nnoremap <Leader>e :NERDTreeToggle<CR>

" shortcut for Ack
nnoremap <Leader>a :Ack 

" remove trailing whitespaces
nnoremap <silent> <Leader>r :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>
